const validateSudoku = require("./sodukuValidator");

test("should return false", () => {
  expect(
    validateSudoku([
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
    ])
  ).toEqual(false);
});
test("should return true", () => {
  expect(
    validateSudoku([
      [8, 4, 7, 2, 6, 5, 1, 9, 3],
      [1, 3, 6, 7, 9, 8, 2, 4, 5],
      [9, 5, 2, 1, 4, 3, 8, 6, 7],
      [4, 2, 9, 6, 7, 1, 5, 3, 8],
      [6, 7, 8, 5, 3, 2, 9, 1, 4],
      [3, 1, 5, 4, 8, 9, 7, 2, 6],
      [5, 6, 4, 9, 1, 7, 3, 8, 2],
      [7, 8, 1, 3, 2, 4, 6, 5, 9],
      [2, 9, 3, 8, 5, 6, 4, 7, 1],
    ])
  ).toEqual(true);
});
test("should return false due to 0", () => {
  expect(
    validateSudoku([
      [8, 4, 7, 2, 6, 5, 1, 0, 3],
      [1, 3, 6, 7, 0, 8, 2, 4, 5],
      [0, 5, 2, 1, 4, 3, 8, 6, 7],
      [4, 2, 0, 6, 7, 1, 5, 3, 8],
      [6, 7, 8, 5, 3, 2, 0, 1, 4],
      [3, 1, 5, 4, 8, 0, 7, 2, 6],
      [5, 6, 4, 0, 1, 7, 3, 8, 2],
      [7, 8, 1, 3, 2, 4, 6, 5, 0],
      [2, 0, 3, 8, 5, 6, 4, 7, 1],
    ])
  ).toEqual(false);
});
test("should return false due to 3 in col", () => {
  expect(
    validateSudoku([
      [1, 3, 2, 5, 7, 9, 4, 6, 8],
      [4, 9, 8, 2, 6, 1, 3, 7, 5],
      [7, 5, 6, 3, 8, 4, 2, 1, 9],
      [6, 4, 3, 1, 5, 8, 7, 9, 2],
      [5, 2, 1, 7, 9, 3, 8, 4, 6],
      [9, 8, 7, 4, 2, 6, 5, 3, 1],
      [2, 1, 4, 9, 3, 5, 6, 8, 7],
      [3, 6, 5, 8, 1, 7, 9, 2, 4],
      [8, 7, 9, 6, 4, 2, 1, 3, 5],
    ])
  ).toEqual(false);
});
test("should return false due to sqr", () => {
  expect(
    validateSudoku([
      [1, 2, 3, 4, 5, 6, 7, 8, 9],
      [2, 3, 4, 5, 6, 7, 8, 9, 1],
      [3, 4, 5, 6, 7, 8, 9, 1, 2],
      [4, 5, 6, 7, 8, 9, 1, 2, 3],
      [5, 6, 7, 8, 9, 1, 2, 3, 4],
      [6, 7, 8, 9, 1, 2, 3, 4, 5],
      [7, 8, 9, 1, 2, 3, 4, 5, 6],
      [8, 9, 1, 2, 3, 4, 5, 6, 7],
      [9, 1, 2, 3, 4, 5, 6, 7, 8],
    ])
  ).toEqual(false);
});
